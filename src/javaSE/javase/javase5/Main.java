package javaSE.javase.javase5;

/**
 * 小数类型
 * 小数类型比较难理解(比较难理解指的是原理 不是使用) 首先来看看java中的小数类型包含哪些:
 *      > float单精度浮点型 (32bit 4字节)
 *      > double双精度浮点型 (64bit 8字节)
 *
 * 思考: 小数的范围该怎么定义呢 我们首先要了解的是小数在计算机里面是如何存放的:
 *                  float单精度实数的存储结构:
 *                  S(31)   E(阶码 30~23 共8位)    M(尾数 22~0 共23位)
 *
 *                  double双精度的存储结构:
 *                  S(63)   E(阶码 52~62 共11位)   M(尾数 51~0 共52位)
 *
 * 根据国际标准IEEE756 任意一个二进制浮点数V可以表示成下面的形式:
 *                  V = (-1) ^ S x M x 2 ^ E
 *      > (-1)^S表示符号位 当S=0 V为整数 当S=1 V为负数
 *      > M表示有效数字 大于等于1 小于2 但整数部分的1不变 因此可以省略(例如 尾数为1111010 那么M实际上就是1.111010 尾数首位必须是1
 *        1后面紧跟小数点 如果出现0001111这样的情况 去掉前面的0 移动1倒首位 题外话: 随着时间的发展 IEEE756标准默认第一位为1
 *        故为了能够存放更多数据 就舍去了第一位 比如保存1.0101的时候 只保存0101 这样能够多存储一位数据)
 *      > 2^E表示指数位(用于移动小数点)
 *
 * 比如 对于十进制的5.25对应的二进制为: 101.01 相当于: 1.0101*2^2 所以 S为0 M为1.0101 E为2 所以对于浮点类型
 * 最大值和最小值不仅取决于符号和尾数 还有其他阶码 我们在这里就不去计算了 想了解的可以去探索相关资料
 *
 * 思考: 就算double有64bit位数 但是依然存在精度限制 如果我要进行高精度的计算 怎么办 BigDecimal
 *
 * 布尔类型
 * 布尔类型(boolean) 只有true和false两种 也就是要么为真 要么为假 布尔类型的变量通常用于流程控制判断语句(C语言一般使用0表示false 除0以外所有数都表示true)
 * 布尔类占据的空间大小并未明确定义 而是根据不同的JVM会有不同的实现
 */
public class Main {

    public static void main(String[] args) {

        double a = 5.11111111111111111D;
        System.out.println(a);

    }

}
